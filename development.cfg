# Development buildout
# ====================

[buildout]
parts =
    ${buildout:lxml-parts}
    ${buildout:fabric-parts}
    ${buildout:site-parts}
    instance-debug
    tmpdir
    omelette
    zopepy
    mrbob
    checkversions
    i18nduder
    codeintel
    repozo
    backup

extends =
    buildout.d/lxml.cfg
    buildout.d/fabric.cfg
    buildout.d/site.cfg
    packages.cfg


auto-checkout =
    ade25.fabfiles
    ade25.base
    ade25.sitecontent
    ade25.widgets
    ade25.panelpage
    bobtemplates.ade25
    wla.sitetheme
    sauna.reload
    ade25.banner
    wla.publications

always-checkout = force
update-versions-file = known-good-versions.cfg

# Override Zope instance settings to add custom packages managed by mr.developer
[instance-debug]
recipe = plone.recipe.zope2instance
http-address = 8499
user = zope-admin:admin
verbode-security = on
resources = ${buildout:directory}/resources
eggs =
    ${eggs:main}
    ${eggs:custom}
    ${eggs:addon}
    ${eggs:devtools}
environment-vars =
    PTS_LANGUAGES en de
    zope_i18n_allowed_languages en de
    zope_i18n_compile_mo_files true
    TUS_ENABLED true
    TUS_TMP_FILE_DIR ${buildout:directory}/var/tmp
zope-conf-additional =
    <product-config beaker>
    session.type            file
    session.data_dir        ${buildout:directory}/var/sessions/data
    session.lock_dir        ${buildout:directory}/var/sessions/lock
    session.key             beaker.session.wla
    session.secret          AeZo5aex0quiquu1aungiejei0quic9e-wla
    </product-config>


# Change the site name to the appropriate value
# This variable will be used to configure the docker webserver container
[site]
sitename = wla

# Change the site-id to the appropriate value
# This variable will be used to compose filesystem paths
[plone-site]
site-id = wla

[tmpdir]
recipe = z3c.recipe.mkdir
paths = ${buildout:directory}/var/tmp

[test]
recipe = zc.recipe.testrunner
eggs = ${eggs:test}
defaults = ['--auto-color', '--auto-progress']

# Coverage reports
# Run: 'bin/test --coverage=coverage' and 'bin/coveragereport'
[coverage-report]
recipe = zc.recipe.egg
eggs = z3c.coverage
scripts = coveragereport
arguments = ('parts/test/coverage', 'coverage')

[omelette]
recipe = collective.recipe.omelette
eggs =
    ${eggs:addon}

[zopepy]
recipe = zc.recipe.egg
eggs =
    ${eggs:main}
    ${eggs:devtools}
interpreter = zopepy

[mrbob]
recipe = zc.recipe.egg
eggs =
    mr.bob
    bobtemplates.ade25
    ${eggs:main}
    ${eggs:devtools}

[checkversions]
recipe = zc.recipe.egg
eggs = z3c.checkversions [buildout]

[i18nduder]
#handy shortcuts for i18n tasks
#duder create -l de -p my.package #creates a locales folder for de
#duder update -p my.package #rebuild-pot and syncs to all pos
#duder mo -p my.package #compiles all po files to mo
recipe = zc.recipe.egg
eggs = ${eggs:main}
       zettwerk.i18nduder

[codeintel]
recipe = corneti.recipes.codeintel
eggs = ${instance-debug:eggs}

[backup]
recipe = collective.recipe.backup
blob_storage = ${buildout:directory}/var/blobstorage
enable_zipbackup = true
blobziplocation = ${buildout:directory}/var/zipblobbackups
blobbackuplocation = ${buildout:directory}/var/blobstoragebackups
blobsnapshotlocation = ${buildout:directory}/var/blobstoragesnapshots
location = ${buildout:directory}/var/backups
snapshotlocation = ${buildout:directory}/var/snapshotbackups
ziplocation = ${buildout:directory}/var/zipbackups

[repozo]
recipe = zc.recipe.egg
eggs = ZODB3
scripts = repozo
